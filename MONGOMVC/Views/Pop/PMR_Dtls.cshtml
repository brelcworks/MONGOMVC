@model MONGOMVC.Models.PMRMODEL
<style type="text/css">
    .input-xs {
        height: 22px;
        padding: 2px 5px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
    }

    .focus {
        border: 2px solid red;
        background-color: #FEFED5;
    }

    .custom-date-style {
        background-color: red !important;
    }
</style>
<script>
    $(function () {
        $("#txtSTYPE").autocomplete({
            source: '@Url.Action("stype")'
        });
        $("#txtTECHNICIAN").autocomplete({
            source: '@Url.Action("tech")'
        });
        $('#txtSTYPE').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtTTR').focus();
                e.preventDefault();
                var date1 = new Date($('#txtDOS').val())
                var date2 = new Date($('#txtCDATI').val())
                var difference_ms = date2 - date1;
                difference_ms = difference_ms / 1000;
                var seconds = Math.floor(difference_ms % 60);
                difference_ms = difference_ms / 60;
                var minutes = Math.floor(difference_ms % 60);
                difference_ms = difference_ms / 60;
                var hours = Math.floor(difference_ms % 24);
                var days = Math.floor(difference_ms / 24);
                var one_day = 1000 * 60 * 60 * 24;
                var difference_ms1 = date2 - date1;
                var day1 = difference_ms1 / one_day;
                var tval = day1 * 24;
                $('#txtTTR').val(tval.toFixed(0));
                switch (true) {
                    case (tval >= 72):
                        $('#txtTSLOT').val(">72");
                        break;
                    case (tval >= 48):
                        $('#txtTSLOT').val("48-72");
                        break;
                    case (tval >= 24):
                        $('#txtTSLOT').val("24-48");
                        break;
                    case (tval >= 10):
                        $('#txtTSLOT').val("10-24");
                        break;
                    default:
                        $('#txtTSLOT').val("0-10");
                }

                var hm = $('#txtHMR').val();
                switch (true) {
                    case (hm >= 15000):
                        $('#txtHMAGE').val(">15000");
                        break;
                    case (hm >= 12500):
                        $('#txtHMAGE').val("12500-15000");
                        break;
                    case (hm >= 10000):
                        $('#txtHMAGE').val("10000-12500");
                        break;
                    case (hm >= 7500):
                        $('#txtHMAGE').val("7500-10000");
                        break;
                    case (hm >= 5000):
                        $('#txtHMAGE').val("5000-7500");
                        break;
                    case (hm >= 2500):
                        $('#txtHMAGE').val("2500-5000");
                        break;
                    default:
                        $('#txtHMAGE').val("0-2500");
                }
            }
        });
        $('#txtTTR').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtTSLOT').focus();
                e.preventDefault();
                var stp = $('#txtSTYPE').val();
                if (stp == "OIL SERVICE") {
                    var rat = $('#txtKVA').val();
                    switch (rat) {
                        case '7.5':
                            $('#txtMETERIAL').val("1)LUBE OIL 7.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 1 NOS");
                            break;
                        case '10':
                            $('#txtMETERIAL').val("1)LUBE OIL 7.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 1 NOS");
                            break;
                        case '15':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '20':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '25':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '30':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '35':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '40':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '50':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '62.5':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        default:
                            $('#txtMETERIAL').val("FILL THE DATA MANUALLY");
                            break;
                    }
                    $('#txtCCATE').val("ENGINE");
                    $('#txtCNAT').val("NA");
                    $('#txtSERV').val("NA");
                    $('#txtSTA').val("CLOSED");
                    $('#txtACTION').val("SERVICING DONE");
                    $('#txtRFAIL').val("NA");
                }
            }
        });
        $('#txtSTA').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtRFAIL').focus();
                e.preventDefault();
                var ser = $('#txtSERV').val();
                var tt = $('#txtTTR').val();
                if (ser == "MAJOR") {
                    switch (true) {
                        case (tt > 12):
                            $('#txtSLA').val("OUT OF SLA");
                            break;
                        default:
                            $('#txtSLA').val("WITHIN SLA");
                            $('#txtRESLA').val("NA");
                            break;
                    }
                }
                else {
                    switch (true) {
                        case (tt > 6):
                            $('#txtSLA').val("OUT OF SLA");
                            break;
                        default:
                            $('#txtSLA').val("WITHIN SLA");
                            $('#txtRESLA').val("NA");
                            break;
                    }
                }
            }
        });
        $('#txtRFAIL').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtACTION').focus();
                $('#txtDPCODE').val("A1587");
                e.preventDefault();
            }
        });
        $('#txtACTION').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtPOPACTION').val($('#txtACTION').val());
                $('#txtREPORT').focus();
                e.preventDefault();
            }
        });
        $('#txtTSLOT').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtMETERIAL').focus();
                e.preventDefault();
            }
        });
        $('#txtCCATE').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtCNAT').focus();
                e.preventDefault();
            }
        });

        $('#txtCNAT').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSERV').focus();
                e.preventDefault();
            }
        });

        $('#txtSERV').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSTA').focus();
                e.preventDefault();
            }
        });
        $('#txtRFAIL').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtACTION').focus();
                $('#txtDPCODE').val("A1587");
                e.preventDefault();
            }
        });

        $('#txtACTION').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtPOPACTION').val($('#txtACTION').val());
                $('#txtREPORT').focus();
                e.preventDefault();
            }
        });

        $('#txtREPORT').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtTECHNICIAN').focus();
                e.preventDefault();
            }
        });

        $('#txtTECHNICIAN').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSLA').focus();
                e.preventDefault();
            }
        });
        $('#txtDOS').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtCDATI').focus();
                e.preventDefault();
            }
        });
        $('#txtCDATI').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSTYPE').focus();
                e.preventDefault();
            }
        });
        $('#txtHMR').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSTYPE').focus();
                e.preventDefault();
            }
        });
        $('#txtMETERIAL').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtCCATE').focus();
                e.preventDefault();
            }
        });
        $('#txtDOS').datetimepicker({
            format: 'd-M-Y H:i',
            step: 1,
            theme: 'dark'
        });

        $('#txtCDATI').datetimepicker({
            format: 'd-M-Y H:i',
            step: 1,
            theme: 'dark'
        });
        $('#txtREM').focus(function (e) {
    		var chmd ;
    		var chmr;
    		$.ajax({
                 type: "GET",
                 url: "@Url.Action("gtbtot", "Pop")",
                 data: { aData: $("#txtENS").val() },
               	 contentType: "application/json; charset=utf-8",
                 dataType: "json",
                 success: function (data) {
                 var dt = data.DOS;
                 var date = dt.replace(/[^0-9 +]/g, '');
                 var date1 = new Date(parseInt(date)); 
                 chmd = date1;
                 chmr = data.HMR;
                 	if (chmd == "") {
        		alert("BLANK");
    		}
    		else {
        		var start = new Date($('#txtCDATI').val());
        		var diff = new Date(start - chmd);
        		var days = diff / 1000 / 60 / 60 / 24;
        		var difhm = $('#txtHMR').val() - chmr;
        		var ahm = difhm / days;
        		var xy = 500 / ahm;
        		var styp = $('#txtSTYPE').val();
        		if (xy >= 180) {
            		$('#txtAHM').val(ahm);
            		$('#txtPOPCHMR').val($('#txtHMR').val());
            		$('#txtPOPCHMD').val($('#txtCDATI').val());
            		start.setDate(start.getDate() + 180);
            			if (styp == 'OIL SERVICE') {
                			$('#txtPOPLHMR').val($('#txtHMR').val());
                			$('#txtPOPLSD').val($('#txtCDATI').val());
                			var month = new Array();
                			month[0] = "Jan";
                			month[1] = "Feb";
                			month[2] = "Mar";
                			month[3] = "Apr";
                			month[4] = "May";
                			month[5] = "Jun";
                			month[6] = "Jul";
                			month[7] = "Aug";
                			month[8] = "Sep";
                			month[9] = "Oct";
                			month[10] = "Nov";
                			month[11] = "Dec";
                			var mon1 = month[start.getMonth()];
                			$('#txtNSD').val(start.getDate() + "-" + mon1 + "-" + start.getFullYear() + " " + start.getHours() + ":" + start.getMinutes());
            			}
            			$('#txtLHMR').val($('#txtPOPLHMR').val());
                $('#txtLSD').val($('#txtPOPLSD').val());
            $('#txtNSD1').val($('#txtNSD').val());
        		}
        		else {
            		$('#txtAHM').val(ahm);
            		$('#txtPOPCHMR').val($('#txtHMR').val());
            		$('#txtPOPCHMD').val($('#txtCDATI').val());
            		start.setDate(start.getDate() + xy);
            		if (styp == 'OIL SERVICE') {
                		$('#txtPOPLHMR').val($('#txtHMR').val());
                		$('#txtPOPLSD').val($('#txtCDATI').val());
                		var month = new Array();
                		month[0] = "Jan";
                		month[1] = "Feb";
                		month[2] = "Mar";
                		month[3] = "Apr";
                		month[4] = "May";
                		month[5] = "Jun";
                		month[6] = "Jul";
                		month[7] = "Aug";
                		month[8] = "Sep";
                		month[9] = "Oct";
                		month[10] = "Nov";
                		month[11] = "Dec";
                		var mon1 = month[start.getMonth()];
                		$('#txtNSD').val(start.getDate() + "-" + mon1 + "-" + start.getFullYear() + " " + start.getHours() + ":" + start.getMinutes());
            		}
            		$('#txtLHMR').val($('#txtPOPLHMR').val());
                $('#txtLSD').val($('#txtPOPLSD').val());
            $('#txtNSD1').val($('#txtNSD').val());
        	}
    	}
                 },
            	error: function OnErrorCall(response) {
                   alert(response.status + " " + response.statusText);
                }
           });
	});

	$('#txtSLA').keypress(function (e) {
    	if (e.keyCode == 13) {
        	$('#txtRESLA').focus();
        	e.preventDefault();
    	}
	});

$('#txtRESLA').keypress(function (e) {
    if (e.keyCode == 13) {
        $('#txtREM').focus();
        e.preventDefault();
    }
});

$("#btnDEL").click(function () {
                        $.ajax({
                            url: "@Url.Action("DEL_PMR", "Pop")",
                            type: "POST",
                            data: { "id": $('#txtRID1').val()},
                            dataType: "json",
                            success: function (data) {
                                if (data.toString() != "Successfully Saved!") {
                                    alert(data.toString());
                                }
                                else {
                                    alert("Record Deleted!");
                                    window.location.href = "/Pop/List";
                                }
                            },
                            error: function (xhr, status, error) {
                                alert(xhr.responseText);
                            }
                        });
                        });

        $(document).ready(function () {
            $('INPUT[type="text"]').focus(function () {
                $(this).addClass("focus");
            });

            $('INPUT[type="text"]').blur(function () {
                $(this).removeClass("focus");
            });
        });
    });
</script>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h4 class="modal-title" id="myModalLabel"></h4>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
<fieldset>
    <h4>ISSUE DETAILS FOR SITE NAME: &nbsp; &nbsp; @Html.DisplayFor(model => model.PMRs.SNAME) | &nbsp; &nbsp; SITE ID: &nbsp; &nbsp; @Html.DisplayFor(model => model.PMRs.SID) &nbsp; &nbsp; | &nbsp; &nbsp; <input type="submit" value="Update" class="btn btn-success btn-xs" /> &nbsp; &nbsp; | &nbsp; &nbsp; <input id="btnDEL" value="Delete" type="button" class="btn btn-danger btn-xs" /> </h4>
    <table class="table table-bordered table-hover table-responsive ui-front">
        <tr>
            <td>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.LabelFor(model => model.PMRs.CUST)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.CUST, new { @class = "form-control input-xs", @id = "txtCUST" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.ENGINE_No)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.ENGINE_No, new { @class = "form-control input-xs", @id = "txtENS" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.DGNO)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.DGNO, new { @class = "form-control input-xs", @id = "txtDGNO" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.KVA)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.KVA, new { @class = "form-control input-xs", @id = "txtKVA" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.MODEL)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.MODEL, new { @class = "form-control input-xs", @id = "txtMODEL" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.DOI)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.DOI, new { @class = "form-control input-xs", @id = "txtDOI" })
                    </dd>

                    <dt>
                        @Html.LabelFor(model => model.PMRs.AMAKE)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.AMAKE, new { @class = "form-control input-xs", @id = "txtAMAKE" })
                    </dd>

                    <dt>
                        @Html.LabelFor(model => model.PMRs.ALSN)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.ALSN, new { @class = "form-control input-xs", @id = "txtALSN" })
                    </dd>

                    <dt>
                        @Html.LabelFor(model => model.PMRs.BSN)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.BSN, new { @class = "form-control input-xs", @id = "txtBSN" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.AMC)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.AMC, new { @class = "form-control input-xs", @id = "txtAMC" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.WARR)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.WARR, new { @class = "form-control input-xs", @id = "txtWARR" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.OEA)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.OEA, new { @class = "form-control input-xs", @id = "txtOEA" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.DIST)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.DIST, new { @class = "form-control input-xs", @id = "txtDIST" })
                    </dd>

                    <dt>
                        @Html.LabelFor(model => model.PMRs.STATE)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.STATE, new { @class = "form-control input-xs", @id = "txtSTATE" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.MAINPOP.nsd)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.MAINPOP.nsd, new { @class = "form-control input-xs", @id = "txtNSD" })
                    </dd>
                    @Html.HiddenFor(model => model.MAINPOP.nsd, new { @class = "form-control input-xs", @id = "txtNSD" })
                </dl>
            </td>
            <td>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.LabelFor(model => model.PMRs.DOS)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.DOS, new { @class = "form-control input-xs", @id = "txtDOS" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.CDATI)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.CDATI, new { @class = "form-control input-xs", @id = "txtCDATI" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.HMR)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.HMR, new { @class = "form-control input-xs", @id = "txtHMR" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.STYPE)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.STYPE, new { @class = "form-control input-xs", @id = "txtSTYPE" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.TTR)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.TTR, new { @class = "form-control input-xs", @id = "txtTTR" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.TSLOT)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.TSLOT, new { @class = "form-control input-xs", @id = "txtTSLOT" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.METERIAL)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.METERIAL, new { @class = "form-control input-xs", @id = "txtMETERIAL" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.CCATE)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.CCATE, new { @class = "form-control input-xs", @id = "txtCCATE" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.CNAT)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.CNAT, new { @class = "form-control input-xs", @id = "txtCNAT" })
                    </dd>

                    <dt>
                        @Html.LabelFor(model => model.PMRs.SERV)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.SERV, new { @class = "form-control input-xs", @id = "txtSERV" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.STA)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.STA, new { @class = "form-control input-xs", @id = "txtSTA" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.RFAIL)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.RFAIL, new { @class = "form-control input-xs", @id = "txtRFAIL" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.ACTION)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.ACTION, new { @class = "form-control input-xs", @id = "txtACTION" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.Report)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.Report, new { @class = "form-control input-xs", @id = "txtREPORT" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.Technician)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.Technician, new { @class = "form-control input-xs", @id = "txtTECHNICIAN" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.SLA)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.SLA, new { @class = "form-control input-xs", @id = "txtSLA" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.RESLA)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.RESLA, new { @class = "form-control input-xs", @id = "txtRESLA" })
                    </dd>
                    <dt>
                        @Html.LabelFor(model => model.PMRs.REM)
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PMRs.REM, new { @class = "form-control input-xs", @id = "txtREM" })
                        @Html.ValidationMessageFor(model => model.PMRs.REM)
                    </dd>
                </dl>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.HiddenFor(model => model.PMRs.recid, new { @class = "form-control input-xs", @id = "txtRID" })
                @Html.HiddenFor(model => model.PMRs.RECID1, new { @class = "form-control input-xs", @id = "txtRID1" })
                @Html.HiddenFor(model => model.PMRs.DPCODE, new { @class = "form-control input-xs", @id = "txtDPCODE" })
                @Html.HiddenFor(model => model.PMRs.SID, new { @class = "form-control input-xs", @id = "txtSID" })
                @Html.HiddenFor(model => model.PMRs.SNAME)
                @Html.HiddenFor(model => model.PMRs.lmodi)
                @Html.HiddenFor(model => model.PMRs.SSTA)
                @Html.HiddenFor(model => model.PMRs.AEDT)
                @Html.HiddenFor(model => model.PMRs.LSD, new { @id = "txtLSD" })
            @Html.HiddenFor(model => model.PMRs.NSD, new { @id = "txtNSD1" })
            @Html.HiddenFor(model => model.PMRs.LHMR, new { @id = "txtLHMR" })
            @Html.HiddenFor(model => model.PMRs.ISBILL, new { @id = "txtISBILL" })
                @Html.HiddenFor(model => model.MAINPOP.RID)
                @Html.HiddenFor(model => model.MAINPOP.lsd, new { @id = "txtPOPLSD" })
                @Html.HiddenFor(model => model.MAINPOP.lhmr, new { @id = "txtPOPLHMR" })
                @Html.HiddenFor(model => model.MAINPOP.CHMD, new { @id = "txtPOPCHMD" })
                @Html.HiddenFor(model => model.MAINPOP.CHMR, new { @id = "txtPOPCHMR" })
                @Html.HiddenFor(model => model.MAINPOP.CHMD, new { @id = "txtPOPCHMD1" })
                @Html.HiddenFor(model => model.MAINPOP.CHMR, new { @id = "txtPOPCHMR1" })
                @Html.HiddenFor(model => model.MAINPOP.lmodi, new { @id = "txtPOPLMODI" })
                @Html.HiddenFor(model => model.MAINPOP.AEDT, new { @id = "txtPOPAEDT" })
                @Html.HiddenFor(model => model.MAINPOP.SSTA, new { @id = "txtPOPSSTA" })
                @Html.HiddenFor(model => model.MAINPOP.ENS, new { @id = "txtPOPENS" })

                @Html.HiddenFor(model => model.MAINPOP.RID1)

                @Html.HiddenFor(model => model.MAINPOP.RAT_PH)

                @Html.HiddenFor(model => model.MAINPOP.cntype)

                @Html.HiddenFor(model => model.MAINPOP.CNAME)

                @Html.HiddenFor(model => model.MAINPOP.PHASE)

                @Html.HiddenFor(model => model.MAINPOP.cnmake)

                @Html.HiddenFor(model => model.MAINPOP.SNAME)

                @Html.HiddenFor(model => model.MAINPOP.MODEL)

                @Html.HiddenFor(model => model.MAINPOP.sauto)

                @Html.HiddenFor(model => model.MAINPOP.SID)

                @Html.HiddenFor(model => model.MAINPOP.ADDR)

                @Html.HiddenFor(model => model.MAINPOP.DGNO)

                @Html.HiddenFor(model => model.MAINPOP.DIST)

                @Html.HiddenFor(model => model.MAINPOP.AMAKE)

                @Html.HiddenFor(model => model.MAINPOP.STATE)

                @Html.HiddenFor(model => model.MAINPOP.ALSN)

                @Html.HiddenFor(model => model.MAINPOP.CPN)

                @Html.HiddenFor(model => model.MAINPOP.FRAME)

                @Html.HiddenFor(model => model.MAINPOP.PHNO)

                @Html.HiddenFor(model => model.MAINPOP.BSN)

                @Html.HiddenFor(model => model.MAINPOP.SPIN)

                @Html.HiddenFor(model => model.MAINPOP.OEA)

                @Html.HiddenFor(model => model.MAINPOP.llop)

                @Html.HiddenFor(model => model.MAINPOP.hmage, new { @id = "txtHMAGE" })

                @Html.HiddenFor(model => model.MAINPOP.DOC, new { @id = "txtPOPDOC" })

                @Html.HiddenFor(model => model.MAINPOP.solenoid)

                @Html.HiddenFor(model => model.MAINPOP.ahm)

                @Html.HiddenFor(model => model.MAINPOP.AMC)

                @Html.HiddenFor(model => model.MAINPOP.chalt)

                @Html.HiddenFor(model => model.MAINPOP.DSTA)

                @Html.HiddenFor(model => model.MAINPOP.WARR)

                @Html.HiddenFor(model => model.MAINPOP.starter)

                @Html.HiddenFor(model => model.MAINPOP.ACTION, new { @id = "txtPOPACTION" })

                @Html.HiddenFor(model => model.MAINPOP.DPCODE)
                @Html.HiddenFor(model => model.MAINPOP.nsd, new { @class = "form-control input-xs", @id = "txtNSD" })
            </td>
        </tr>
    </table>
</fieldset>
}

